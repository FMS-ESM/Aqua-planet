#!/bin/csh -f
#Minimal runscript
set echo 
#--------------------------------------------------------------------------------------------------------
# define variables
set platform  = intel                                   # A unique identifier for your platform
set npes      = 64                                      # Number of processors
set num_executions = 1                                  # Number of times the model is run. Each run restarts from previous run.
set time_stamp = $cwd/../bin/time_stamp.csh             # Path to timestamp.csh
set mppnccombine = $cwd/../bin/mppnccombine.$platform   # Path to executable mppnccombine
set model_executable = $cwd/exec.$platform/HIRAM.x      # Path to model executable
set workdir = /lustre/fs/scratch/$USER/work/hiram_doubly_periodic_model # Where model is run and model output is produced
#--------------------------------------------------------------------------------------------------------
source /opt/modules/default/init/csh
module unload PrgEnv-cray PrgEnv-pgi PrgEnv-pathscale PrgEnv-gnu PrgEnv-intel
module unload netcdf
module rm PrgEnv-pgi
module load PrgEnv-intel
module load intel
module load hdf5
module list
setenv MAIN_PROGRAM coupler_main.o

set namelist   = $cwd/namelists    # path to namelist file (contains all namelists)
set diagtable  = $cwd/diag_table   # path to diagnositics table (specifies fields and files for diagnostic output)
set fieldtable = $cwd/field_table  # path to field table (specifies tracers)
set ozone = $cwd/{id1o3,id1o3.nc}
#--------------------------------------------------------------------------------------------------------
# The gaea locations of the input data sets are listed below
set topog    = /lustre/fs/archive/fms/module_data/khartoum/navy_topography.data.nc
set lad_data = /lustre/fs/archive/fms/module_data/ipcc_ar4/lad_data.cpio
set sea_esf  = /lustre/fs/archive/fms/module_data/perth/sea_esf.cpio
set albedo   = /lustre/fs/archive/fms/module_data/khartoum/albedo.data.nc
#--------------------------------------------------------------------------------------------------------
# The GFDL locations of the input data sets are listed below
#set topog    = /archive/fms/module_data/khartoum/navy_topography.data.nc
#set lad_data = /archive/fms/module_data/ipcc_ar4/lad_data.cpio
#set sea_esf  = /archive/fms/module_data/perth/sea_esf.cpio
#set albedo   = /archive/fms/module_data/khartoum/albedo.data.nc
#--------------------------------------------------------------------------------------------------------
# The input data also exists as a zipped tarball here: ftp://ftp.gfdl.noaa.gov/perm/pjp/HIRAM_input_data.tar.gz
#--------------------------------------------------------------------------------------------------------
# setup directory structure
if ( -d $workdir ) then
  /bin/rm -rf $workdir/*
else
  mkdir $workdir
endif
cd $workdir
mkdir INPUT RESTART
#--------------------------------------------------------------------------------------------------------
# get input data and executable
cp $namelist   input.nml
cp $diagtable  diag_table
cp $fieldtable field_table
touch data_table
cp $model_executable .
cd $workdir/INPUT
cp $ozone .
cp $topog .
cpio -iv < $lad_data
cpio -iv < $sea_esf
cp $albedo .
cd $workdir

set irun = 1
while ( $irun <= $num_executions )
#--------------------------------------------------------------------------------------------------------
# run the model with aprun
aprun -n $npes ./$model_executable:t
if ($status != 0) then
  echo "Error in execution of $cwd/$model_executable:t"
  exit 1
endif
#--------------------------------------------------------------------------------------------------------
set date_name = `$time_stamp -bf digital`
foreach outfile (logfile.000000.out time_stamp.out diag_integral.out)
  mv $outfile $date_name.$outfile
end

#--------------------------------------------------------------------------------------------------------
# combine diagnostic files, remove the uncombined files, and add the time stamp to the file names
if ( $npes > 1 ) then
  foreach ncfile (`/bin/ls *.nc.0000`)
    $mppnccombine $ncfile:r
    if ($status == 0) then
      rm -f $ncfile:r.[0-9][0-9][0-9][0-9]
      mv $ncfile:r $date_name.$ncfile:r
    else
      echo "Error in execution of $mppnccombine while working on $ncfile:r"
      exit 1
    endif
  end
endif
#--------------------------------------------------------------------------------------------------------
# Prepare to run the model again
/bin/rm INPUT/*.res   INPUT/*.res.nc   INPUT/*.res.nc.0???   INPUT/*.res.tile?.nc   INPUT/*.res.tile?.nc.0???
mv    RESTART/*.res RESTART/*.res.nc RESTART/*.res.nc.0??? RESTART/*.res.tile?.nc RESTART/*.res.tile?.nc.0??? INPUT
#--------------------------------------------------------------------------------------------------------
@ irun ++
end
exit 0
